{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "AWS CloudFormation Sample Template Redshift: Create an Amazon Redshift cluster. **WARNING** This template creates Amazon Redshift Cluster. You will be billed for the AWS resources used if you create a stack from this template.",
  "Parameters": {
    "DatabaseName": {
      "Description": "The name of the first database to be created when the redshift cluster is created",
      "Type": "String",
      "Default": "defaultdb",
      "AllowedPattern": "([a-z]|[0-9])+",
      "ConstraintDescription": "must contain a-z or 0-9 only."
    },
    "ClusterType": {
      "Description": "The type of the cluster",
      "Type": "String",
      "Default": "multi-node",
      "AllowedValues": [
        "single-node",
        "multi-node"
      ],
      "ConstraintDescription": "must be single-node or multi-node."
    },
    "numberOfNodes": {
      "Description": "The number of compute nodes in the redshift cluster.  When cluster type is specified as: 1) single-node, the numberOfNodes parameter should be specified as 1, 2) multi-node, the numberOfNodes parameter should be greater than 1",
      "Type": "Number",
      "Default": "2"
    },
    "featuresAqua": {
      "Type": "String",
      "Default": "false",
      "AllowedValues": [
        "true",
        "false"
      ]
    },
    "featuresWorkloadmanager": {
      "Description": "Workload manager (WLM)",
      "Type": "String",
      "Default": "false",
      "AllowedValues": [
        "true",
        "false"
      ]
    },
    "featuresConcurrencyscaling": {
      "Description": "Concurrency Scaling",
      "Type": "String",
      "Default": "false",
      "AllowedValues": [
        "true",
        "false"
      ]
    },
    "nodeType": {
      "Description": "The node type to be provisioned for the redshift cluster",
      "Type": "String",
      "Default": "dc1.large",
      "AllowedValues": [
        "dw1.xlarge",
        "dw1.8xlarge",
        "dw2.large",
        "dw2.8xlarge",
        "dc1.large",
        "dc1.8xlarge",
        "ds1.xlarge",
        "ds1.8xlarge",
        "ds2.xlarge",
        "ds2.8xlarge"
      ],
      "ConstraintDescription": "must be a valid RedShift node type."
    }
  },
  "Conditions": {
    "IsMultiNodeCluster": {
      "Fn::Equals": [
        {
          "Ref": "ClusterType"
        },
        "multi-node"
      ]
    },
    "IsAquaEnabled": {
      "Fn::Equals": [
        {
          "Ref": "featuresAqua"
        },
        "true"
      ]
    }
  },
  "Resources": {
    "AdminUserSecret": {
      "Type": "AWS::SecretsManager::Secret",
      "Properties": {
        "KmsKeyId": {
          "Fn::ImportValue": "Benchmarking::KMSKey"
        },
        "Description": "Redshift admin user",
        "GenerateSecretString": {
          "SecretStringTemplate": "{\"username\": \"admin\"}",
          "GenerateStringKey": "password",
          "PasswordLength": 16,
          "ExcludeCharacters": "\"'@/\\"
        }
      }
    },
    "RedshiftCluster": {
      "Type": "AWS::Redshift::Cluster",
      "Properties": {
        "ClusterType": {
          "Ref": "ClusterType"
        },
        "NumberOfNodes": {
          "Fn::If": [
            "IsMultiNodeCluster",
            {
              "Ref": "numberOfNodes"
            },
            {
              "Ref": "AWS::NoValue"
            }
          ]
        },
        "Encrypted": true,
        "KmsKeyId": {
          "Fn::ImportValue": "Benchmarking::KMSKey"
        },
        "AquaConfigurationStatus": {
          "Fn::If": [
            "IsAquaEnabled",
            "enabled",
            "disabled"
          ]
        },
        "NodeType": {
          "Ref": "nodeType"
        },
        "DBName": {
          "Ref": "DatabaseName"
        },
        "MasterUsername": {
          "Fn::Sub": "{{resolve:secretsmanager:${AdminUserSecret}::username}}"
        },
        "MasterUserPassword": {
          "Fn::Sub": "{{resolve:secretsmanager:${AdminUserSecret}::password}}"
        },
        "ClusterParameterGroupName": {
          "Ref": "RedshiftClusterParameterGroup"
        }
      },
      "DeletionPolicy": "Delete"
    },
    "SecretRedshiftAttachment": {
      "Type": "AWS::SecretsManager::SecretTargetAttachment",
      "Properties": {
        "SecretId": {
          "Ref": "AdminUserSecret"
        },
        "TargetId": {
          "Ref": "RedshiftCluster"
        },
        "TargetType": "AWS::Redshift::Cluster"
      }
    },
    "RedshiftClusterParameterGroup": {
      "Type": "AWS::Redshift::ClusterParameterGroup",
      "Properties": {
        "Description": "Cluster parameter group",
        "ParameterGroupFamily": "redshift-1.0",
        "Parameters": [
          {
            "ParameterName": "enable_user_activity_logging",
            "ParameterValue": "true"
          }
        ]
      }
    }
  },
  "Outputs": {
    "SecretIdAdminUser": {
      "Description": "The admin user to use for benchmarking queries",
      "Value": {
        "Fn::Sub": "${AdminUserSecret}"
      }
    }
  }
}
