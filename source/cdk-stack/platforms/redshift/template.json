{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "AWS CloudFormation Sample Template Redshift: Create an Amazon Redshift cluster. **WARNING** This template creates Amazon Redshift Cluster. You will be billed for the AWS resources used if you create a stack from this template.",
  "Parameters": {
    "DatabaseName": {
      "Description": "The name of the first database to be created when the redshift cluster is created",
      "Type": "String",
      "Default": "defaultdb",
      "AllowedPattern": "([a-z]|[0-9])+",
      "ConstraintDescription": "must contain a-z or 0-9 only."
    },
    "numberOfNodes": {
      "Description": "The number of compute nodes in the redshift cluster.  When cluster type is specified as: 1) single-node, the numberOfNodes parameter should be specified as 1, 2) multi-node, the numberOfNodes parameter should be greater than 1",
      "Type": "Number",
      "Default": "2"
    },
    "featuresAqua": {
      "Type": "String",
      "Default": "false",
      "AllowedValues": [
        "true",
        "false"
      ]
    },
    "featuresWorkloadmanager": {
      "Description": "Workload manager (WLM)",
      "Type": "String",
      "Default": "false",
      "AllowedValues": [
        "true",
        "false"
      ]
    },
    "featuresConcurrencyscaling": {
      "Description": "Concurrency Scaling",
      "Type": "String",
      "Default": "false",
      "AllowedValues": [
        "true",
        "false"
      ]
    },
    "nodeType": {
      "Description": "The node type to be provisioned for the redshift cluster",
      "Type": "String",
      "Default": "dc2.large",
      "AllowedValues": [
        "ra3.xlplus",
        "ra3.4xlarge",
        "ra3.16xlarge",
        "ds2.xlarge",
        "ds2.8xlarge",
        "dc1.large",
        "dc1.8xlarge",
        "dc2.large",
        "dc2.8xlarge"
      ],
      "ConstraintDescription": "must be a valid RedShift node type."
    }
  },
  "Conditions": {
    "IsSingleNodeCluster": {
      "Fn::Equals": [
        {
          "Ref": "numberOfNodes"
        },
        "1"
      ]
    },
    "IsAquaEnabled": {
      "Fn::Equals": [
        {
          "Ref": "featuresAqua"
        },
        "true"
      ]
    }
  },
  "Resources": {
    "AdminUserSecret": {
      "Type": "AWS::SecretsManager::Secret",
      "Properties": {
        "KmsKeyId": {
          "Fn::ImportValue": "Benchmarking::KMSKey"
        },
        "Description": "Redshift admin user",
        "GenerateSecretString": {
          "SecretStringTemplate": "{\"username\": \"admin\"}",
          "GenerateStringKey": "password",
          "PasswordLength": 16,
          "ExcludeCharacters": "\"'@/\\"
        }
      }
    },
    "RedshiftSubnetGroup": {
      "Type": "AWS::Redshift::ClusterSubnetGroup",
      "Properties": {
        "Description": "Redshift cluster subnet group",
        "SubnetIds": {
          "Fn::Split": [
            ",",
            {
              "Fn::ImportValue": "Benchmarking::SubnetIds"
            }
          ]
        }
      }
    },
    "RedshiftSG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "VpcId": {
          "Fn::ImportValue": "Benchmarking::VpcId"
        },
        "GroupDescription": "Redshift SecurityGroup",
        "SecurityGroupIngress": [
          {
            "Description": "Allow benchmarking lambda to connect to Redshift",
            "SourceSecurityGroupId": {
              "Fn::ImportValue": "Benchmarking::Exec::SecurityGroup"
            },
            "IpProtocol": "tcp",
            "FromPort": 5439,
            "ToPort": 5439
          }
        ]
      }
    },
    "RedshiftCluster": {
      "Type": "AWS::Redshift::Cluster",
      "Properties": {
        "ClusterType": {
          "Fn::If": [
            "IsSingleNodeCluster",
            "single-node",
            "multi-node"
          ]
        },
        "IamRoles": [
          {
            "Fn::GetAtt": [
              "RedshiftCopyRole",
              "Arn"
            ]
          }
        ],
        "PubliclyAccessible": false,
        "ClusterSubnetGroupName": {
          "Ref": "RedshiftSubnetGroup"
        },
        "VpcSecurityGroupIds": [
          {
            "Ref": "RedshiftSG"
          }
        ],
        "NumberOfNodes": {
          "Fn::If": [
            "IsSingleNodeCluster",
            {
              "Ref": "AWS::NoValue"
            },
            {
              "Ref": "numberOfNodes"
            }
          ]
        },
        "Encrypted": true,
        "KmsKeyId": {
          "Fn::ImportValue": "Benchmarking::KMSKey"
        },
        "AquaConfigurationStatus": {
          "Fn::If": [
            "IsAquaEnabled",
            "enabled",
            "disabled"
          ]
        },
        "NodeType": {
          "Ref": "nodeType"
        },
        "DBName": {
          "Ref": "DatabaseName"
        },
        "MasterUsername": {
          "Fn::Sub": "{{resolve:secretsmanager:${AdminUserSecret}::username}}"
        },
        "MasterUserPassword": {
          "Fn::Sub": "{{resolve:secretsmanager:${AdminUserSecret}::password}}"
        },
        "ClusterParameterGroupName": {
          "Ref": "RedshiftClusterParameterGroup"
        }
      },
      "DeletionPolicy": "Delete"
    },
    "SecretRedshiftAttachment": {
      "Type": "AWS::SecretsManager::SecretTargetAttachment",
      "Properties": {
        "SecretId": {
          "Ref": "AdminUserSecret"
        },
        "TargetId": {
          "Ref": "RedshiftCluster"
        },
        "TargetType": "AWS::Redshift::Cluster"
      }
    },
    "RedshiftClusterParameterGroup": {
      "Type": "AWS::Redshift::ClusterParameterGroup",
      "Properties": {
        "Description": "Cluster parameter group",
        "ParameterGroupFamily": "redshift-1.0",
        "Parameters": [
          {
            "ParameterName": "enable_user_activity_logging",
            "ParameterValue": "true"
          }
        ]
      }
    },
    "RedshiftCopyRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  {
                    "Fn::Sub": "redshift.${AWS::Region}.amazonaws.com"
                  }
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyName": "RedshiftS3ReadPolicy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "s3:GetObject",
                    "s3:ListBucket",
                    "kms:Decrypt"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": [
                        "arn:aws:kms:${AWS::Region}:${AWS::AccountId}:key/${KMSKeyId}",
                        {
                          "KMSKeyId": {
                            "Fn::ImportValue": "Benchmarking::KMSKey"
                          }
                        }
                      ]
                    },
                    {
                      "Fn::ImportValue": "Benchmarking::DataBucketArn"
                    },
                    {
                      "Fn::Join": [
                        "/",
                        [
                          {
                            "Fn::ImportValue": "Benchmarking::DataBucketArn"
                          },
                          "*"
                        ]
                      ]
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "s3:GetObject",
                    "s3:ListBucket"
                  ],
                  "Resource": "*",
                  "Condition": {
                    "StringEquals": {
                      "aws:ResourceTag/ManagedBy": "BenchmarkingStack"
                    }
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "DataCopierLambdaRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyName": "DataCopierLambdaPolicy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "lambda:InvokeFunction"
                  ],
                  "Resource": [
                    {
                      "Fn::ImportValue": "Benchmarking::Exec::QueryFunctionArn"
                    },
                    {
                      "Fn::ImportValue": "Benchmarking::Exec::ProxyFunctionArn"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Resource": "*"
                }
              ]
            }
          }
        ]
      }
    },
    "DataCopier": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Description": "Lambda function to copy data from S3 to Redshift cluster",
        "Code": {
          "S3Bucket": {
            "Fn::ImportValue": "Benchmarking::DataBucketName"
          },
          "S3Key": "platforms/redshift/functions/data-copier/code.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "DataCopierLambdaRole",
            "Arn"
          ]
        },
        "Handler": "app.lambda_handler",
        "Runtime": "python3.8",
        "Timeout": 900,
        "Environment": {
          "Variables": {
            "StackName": {
              "Ref": "AWS::StackName"
            },
            "RedshiftCopyRoleArn": {
              "Fn::GetAtt": [
                "RedshiftCopyRole",
                "Arn"
              ]
            },
            "ProxyFunctionArn": {
              "Fn::ImportValue": "Benchmarking::Exec::ProxyFunctionArn"
            },
            "QueryFunctionArn": {
              "Fn::ImportValue": "Benchmarking::Exec::QueryFunctionArn"
            }
          }
        }
      }
    }
  },
  "Outputs": {
    "SecretIdAdminUser": {
      "Description": "The admin user to use for benchmarking queries",
      "Value": {
        "Fn::Sub": "${AdminUserSecret}"
      }
    },
    "DataCopierLambdaArn": {
      "Description": "Redshift data copier lambda function ARN",
      "Value": {
        "Fn::GetAtt": [
          "DataCopier",
          "Arn"
        ]
      }
    }
  }
}
